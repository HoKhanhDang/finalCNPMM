/**
 * This code was generated by Builder.io.
 */
import React, { useEffect } from "react";
import FormSection from "./FormSection";
import OrderItem from "./OrderItem";
import { useQuery, useQueryClient } from "@tanstack/react-query";
import { GetOrder } from "../../../utils/order/order.util";
import { useSelector } from "react-redux";
import SocketSingleton from "../../../socket";
interface OrdersFormProps {}

const OrdersForm: React.FC<OrdersFormProps> = ({}) => {
    const { id } = useSelector((state: any) => state.customerSlice);
    const socket = SocketSingleton.getInstance();
    const queryClient = useQueryClient();

    const { data } = useQuery({
        queryKey: ["orders", id],
        queryFn: () => GetOrder(id),
    });

    useEffect(() => {
        socket.connect(); 
        const handleOrderStatusChanged = (data: any) => {
            console.log("Order status changed:", data);
            queryClient.invalidateQueries({ queryKey: ["orders", id] });
        };

        socket.on("orderStatusChanged", handleOrderStatusChanged);
        console.log("OrdersForm mounted");
        return () => {
            socket.off("orderStatusChanged", handleOrderStatusChanged);
        };
    }, [id, queryClient]);

    return (
        <div className="flex flex-col sm:w-[60%] max-sm:w-full max-md:mt-10 pr-[30px]">
            <FormSection title="Orders">
                <div className="flex flex-col gap-5 pt-5">
                    {data?.map((order, index) => (
                        <OrderItem key={index} items={order} />
                    ))}
                </div>
            </FormSection>
        </div>
    );
};

export default OrdersForm;
