/**
 * This code was generated by Builder.io.
 */
import React from "react";

interface FeatureCardProps {
  number: number;
  title: string;
  description: string;
  imageSrc: string;
  isRed?: boolean;
}

const FeatureCard: React.FC<FeatureCardProps> = ({
  number,
  title,
  description,
  imageSrc,
  isRed = false,
}) => {
  const bgColor = isRed ? "bg-red-600" : "bg-orange-50";
  const textColor = isRed ? "text-orange-50" : "text-slate-700";
  const buttonBgColor = isRed ? "bg-orange-50" : "bg-red-600";
  const buttonTextColor = isRed ? "text-red-600" : "text-orange-50";

  return (
    <div className={`flex flex-col w-[33%] max-md:ml-0 max-md:w-full`}>
      <div
        className={`flex flex-col px-7 py-4 mx-auto w-full font-bold ${bgColor} ${textColor} max-md:px-5`}
      >
        <div className="flex self-end mr-14 text-4xl whitespace-nowrap max-md:mr-2.5">
          <img
            loading="lazy"
            src={imageSrc}
            alt=""
            className="object-contain z-10 shrink-0 self-end mt-5 w-20 aspect-square max-md:mr-0"
          />
          <div
            className={`px-10 ${
              isRed ? "bg-orange-50" : "bg-red-600"
            } rounded-full ${
              isRed ? "fill-orange-50" : "fill-red-600"
            } h-[100px] w-[100px] max-md:px-5`}
          >
            {number}
          </div>
        </div>
        <h3 className="self-center mt-10 text-xl">{title}</h3>
        <p className="mt-5 text-lg max-md:mr-1">{description}</p>
        <button
          className={`self-end px-4 py-3 mt-14 text-2xl ${buttonBgColor} ${buttonTextColor} rounded-xl shadow-sm max-md:pl-5 max-md:mt-10`}
        >
          Read More
        </button>
      </div>
    </div>
  );
};

export default FeatureCard;
